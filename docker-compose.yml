version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: file_system_pet_project_app
    ports:
      - "4225:4225"
    environment:
      - PORT=4225
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=3110
      - DB_NAME=filesharing_project
      - JWT_REFRESH_SECRET_KEY=jwt-refresh-secret-key
      - JWT_ACCESS_SECRET_KEY=jwt-access-secret-key
      - SMTP_HOST="smtp.gmail.com" #insert your data for access
      - SMTP_PORT=587 #insert your data for access
      - SMTP_USER=test@gmail.com  #insert your data for access
      - SMTP_PASSWORD="tsrn dmml hkev uihv" #insert your data for access
      - API_URL=http://localhost:4225
      - CLIENT_URL="https://www.youtube.com/"
      - ALLOW_CREATE_ADMIN=true
    depends_on:
      db:
        condition: service_healthy
    command: [ "sh", "-c", "sleep 10 && npm run dev" ]  # Задержка 10 секунд
    volumes:
      - .:/app
      - /app/node_modules

  db:
    image: postgres:15-alpine
    container_name: file_system_pet_project_db
    environment:
      POSTGRES_DB: filesharing_project
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 3110
    ports:
      - "5444:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck: # Проверка готовности базы данных
      test: [ "CMD-SHELL", "pg_isready -U postgres -d filesharing_project" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: